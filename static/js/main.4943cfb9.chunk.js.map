{"version":3,"sources":["components/Header.js","components/Jumbotron.js","components/PlaneCard.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","score","topScore","Jumbotron","PlaneCard","id","src","image","alt","onClick","handleClick","App","state","planes","_this","find","plane","clicked","gameOver","updatedPlanes","map","handleIncrement","doTheShuffle","array","i","length","j","Math","floor","random","_ref","setState","alert","_this2","this","Fragment","components_Header","components_Jumbotron","components_PlaneCard","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"27tBAiBeA,MAff,SAAgBC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAC7BJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAERF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,UACWH,EAAAC,EAAAC,cAAA,YAAOH,EAAMM,OADxB,mBACqDL,EAAAC,EAAAC,cAAA,YAAOH,EAAMO,cCSnEC,MAhBf,WACI,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAd,cACAH,EAAAC,EAAAC,cAAA,0FCKDM,MAVf,SAAmBT,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWM,GAAMV,EAAMU,GAAIC,IAAKX,EAAMY,MAAOC,IAAI,IAAIC,QAAS,kBAAId,EAAMe,YAAYf,EAAMU,iBCsFlGM,oNArFbC,MAAQ,CACNC,OAASA,EACTZ,MAAO,EACPC,SAAU,KAGdQ,YAAc,SAAAL,GAGZ,GAFkBS,EAAKF,MAAMC,OAAOE,KAAK,SAAAC,GAAK,OAAKA,EAAMX,KAAOA,IAEnDY,QACXH,EAAKI,eACA,CACL,IAAIC,EAAgBL,EAAKF,MAAMC,OAAOO,IAAI,SAAAJ,GAIxC,OAHGA,EAAMX,KAAOA,IACdW,EAAMC,SAAU,GAEXD,IAETF,EAAKO,gBAAgBF,OAIzBG,aAAe,SAAAC,GACb,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,KAGTF,gBAAkB,SAACF,GACjBL,EAAKiB,SAAS,CACZ9B,MAAOa,EAAKF,MAAMX,MAAQ,EAC1BY,OAAQC,EAAKQ,aAAaH,QAI5BD,SAAW,WACTL,EAAOO,IAAI,SAAAJ,GAAK,OAAEA,EAAMC,SAAQ,IAC9BH,EAAKF,MAAMX,MAAQa,EAAKF,MAAMV,UAChC8B,MAAM,kCACNlB,EAAKiB,SAAS,CACZ7B,SAAUY,EAAKF,MAAMX,MACrBA,MAAO,EACPY,OAAOC,EAAKQ,aAAaT,OAI3BmB,MAAM,+CACNlB,EAAKiB,SAAS,CACZ9B,MAAM,EACNY,OAAQC,EAAKQ,aAAaT,+EAMxB,IAAAoB,EAAAC,KACN,OAAOtC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsC,SAAA,KAELvC,EAAAC,EAAAC,cAACsC,EAAD,CACEnC,MAAOiC,KAAKtB,MAAMX,MAClBC,SAAUgC,KAAKtB,MAAMV,WAGvBN,EAAAC,EAAAC,cAACuC,EAAD,MACAzC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WACZmC,KAAKtB,MAAMC,OAAOO,IACjB,SAAAJ,GACA,OACIpB,EAAAC,EAAAC,cAACwC,EAAD,CACEC,IAAKvB,EAAMX,GACXA,GAAIW,EAAMX,GACVK,YAAauB,EAAKvB,YAClBH,MAAOS,EAAMT,oBA5EXiC,IAAMC,YCFxBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4943cfb9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <nav className=\"navbar sticky-top navbar-light bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                <h2><strong>Clicky Game</strong></h2>\r\n            </a>\r\n            <span className=\"navbar-text text-dark\">\r\n                <h3 className=\"align-baseline\">\r\n                    Score: <span>{props.score}</span>  |  Top Score: <span>{props.topScore}</span>\r\n                </h3>\r\n            </span>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\n\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container text-center\">\r\n                <h1 className=\"display-5 font-weight-bolder\"> Clickers!</h1>\r\n                <h3>Click image to earn points, but click the same one twice and you'll lose!</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Jumbotron","import React from \"react\";\r\n\r\n\r\nfunction PlaneCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img className=\"clickimg\" id = {props.id} src={props.image} alt=\" \" onClick={()=>props.handleClick(props.id)}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaneCard;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport PlaneCard from \"./components/PlaneCard\";\nimport planes from \"./planes.json\";\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    planes : planes,     \n    score: 0,\n    topScore: 0      \n  };\n///set the click so it restarts the game if a previously picked image is clicked again.\nhandleClick = id => {\n  const pickPlane = this.state.planes.find(plane => (plane.id === id))\n  \n  if(pickPlane.clicked){\n    this.gameOver()    \n  } else {\n    let updatedPlanes = this.state.planes.map(plane => {\n      if(plane.id === id){\n        plane.clicked = true\n      }\n      return plane\n    })\n    this.handleIncrement(updatedPlanes)\n  }\n}\n//randomly shuffle images around\ndoTheShuffle = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n//set up the add 1 to score\nhandleIncrement = (updatedPlanes) => {\n  this.setState({\n    score: this.state.score + 1,\n    planes: this.doTheShuffle(updatedPlanes)\n  })\n}\n//ends game and resets the score to zero. replaces scroe with the topScore.\n  gameOver = () => {\n    planes.map(plane=>plane.clicked=false)\n  if (this.state.score > this.state.topScore){\n    alert(\"New High Altitude World Record\")\n    this.setState({\n      topScore: this.state.score,\n      score: 0,\n      planes:this.doTheShuffle(planes)\n      \n    })\n  } else{\n    alert(\"You trying to tie the low altitude record?!\")\n    this.setState({\n      score:0,\n      planes: this.doTheShuffle(planes)\n    })\n  }\n  \n};\n\nrender(){\n  return(<>\n    \n    <Header\n      score={this.state.score}\n      topScore={this.state.topScore}     \n    />\n\n    <Jumbotron />  \n    <div className = \"container\">\n    <div className = \"wrapper\">    \n        {this.state.planes.map(\n          plane => {\n          return(            \n              <PlaneCard\n                key={plane.id}\n                id={plane.id}\n                handleClick={this.handleClick}            \n                image={plane.image}              \n              />            \n          )}                  \n        )}        \n    </div>\n    </div>  \n</>);\n}\n}\n  \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}